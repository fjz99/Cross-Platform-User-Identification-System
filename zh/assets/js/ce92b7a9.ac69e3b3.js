"use strict";(self.webpackChunkcpuis_docs=self.webpackChunkcpuis_docs||[]).push([[14],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},l=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),l=c(n),m=a,f=l["".concat(u,".").concat(m)]||l[m]||p[m]||o;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=l;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}l.displayName="MDXCreateElement"},255:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={id:"Customizing Backend",title:"Customizing Backend"},u=void 0,c={unversionedId:"Advanced/Customizing Backend",id:"Advanced/Customizing Backend",title:"Customizing Backend",description:"Using other databases",source:"@site/docs/Advanced/backend.md",sourceDirName:"Advanced",slug:"/Advanced/Customizing Backend",permalink:"/Cross-Platform-User-Identification-System/zh/docs/Advanced/Customizing Backend",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Advanced/backend.md",tags:[],version:"current",frontMatter:{id:"Customizing Backend",title:"Customizing Backend"},sidebar:"tutorialSidebar",previous:{title:"Using your own algorithm",permalink:"/Cross-Platform-User-Identification-System/zh/docs/Advanced/algo"},next:{title:"Structure of CPUIS",permalink:"/Cross-Platform-User-Identification-System/zh/docs/Advanced/structure"}},d={},p=[{value:"Using other databases",id:"using-other-databases",level:2},{value:"Customizing input and output formats",id:"customizing-input-and-output-formats",level:2}],l={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"using-other-databases"},"Using other databases"),(0,o.kt)("p",null,"CPUIS uses MongoDB by default to store information, but you can use other relational or non-relational databases. Just implement the interface ",(0,o.kt)("inlineCode",{parentName:"p"},"site.cpuis.service.DataBaseService")," and register it as a ",(0,o.kt)("em",{parentName:"p"},"Spring Bean"),", which will automatically override the default MongoDB database configuration. This is based on the ",(0,o.kt)("em",{parentName:"p"},"automatic configuration mechanism")," of ",(0,o.kt)("a",{parentName:"p",href:"https://docs.spring.io/"},"the SpringBoot framework"),"."),(0,o.kt)("p",null,"Here is the example."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"@Service // register this class as a bean\npublic class DataBaseServiceImpl<T> implements DataBaseService<T> {\n    @Autowired\n    private YourDatabase database;\n    @Override\n    public void createCollection(String name) {\n        database.createCollection(name);\n    }\n    \n    // omit other code\n}\n")),(0,o.kt)("p",null,"Notably, ",(0,o.kt)("inlineCode",{parentName:"p"},"site.cpuis.service.DataBaseService#createIndex")," and\n",(0,o.kt)("inlineCode",{parentName:"p"},"site.cpuis.service.DataBaseService#createTextIndex")," needs indexing functions of databases. You need to ensure that your database has full-text indexing and unique indexing functions.\nAlso, methods such as ",(0,o.kt)("inlineCode",{parentName:"p"},"site.cpuis.service.DataBaseService#countRegex")," rely on regular expressions, you may need to manually write bridge methods (using java's regular expression standard library) for databases that do not have regular expression functions."),(0,o.kt)("h2",{id:"customizing-input-and-output-formats"},"Customizing input and output formats"),(0,o.kt)("p",null,"CPUIS has a default python script output format, and the backend monitoring thread will read the output of the python script according to this standard format.\nThe default output format is"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},"")),(0,o.kt)("p",null,"Among them, in order to implement the progress bar, your python script needs to print the progress of 1, 2, and 3 to the standard output stream at the appropriate time, and the type is double. For example, you can use ",(0,o.kt)("inlineCode",{parentName:"p"},"print(1)")," to indicate that the progress is 1% at a certain point in time."),(0,o.kt)("p",null,"."))}m.isMDXComponent=!0}}]);